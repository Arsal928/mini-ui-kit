@import './design-system.css';

/* Modern CSS Reset */
*, *::before, *::after {
  box-sizing: border-box;
}

* {
  margin: 0;
}

html {
  scroll-behavior: smooth;
}

body {
  line-height: 1.5;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  background-color: hsl(var(--background));
  color: hsl(var(--foreground));
  font-family: var(--font-sans);
  min-height: 100vh;
}

img, picture, video, canvas, svg {
  display: block;
  max-width: 100%;
}

input, button, textarea, select {
  font: inherit;
}

p, h1, h2, h3, h4, h5, h6 {
  overflow-wrap: break-word;
}

#root {
  isolation: isolate;
}

/* Custom scrollbar */
::-webkit-scrollbar {
  width: 8px;
}

::-webkit-scrollbar-track {
  background: #f1f5f9;
}

::-webkit-scrollbar-thumb {
  background: #cbd5e1;
  border-radius: 4px;
}

::-webkit-scrollbar-thumb:hover {
  background: #94a3b8;
}

/* Smooth scrolling */
html {
  scroll-behavior: smooth;
}

/* Focus styles */
*:focus-visible {
  outline: 2px solid hsl(var(--ring));
  outline-offset: 2px;
}

/* Fallback styles for when CSS Modules fail */
.btn-base {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  white-space: nowrap;
  border-radius: var(--radius);
  font-size: var(--text-sm);
  font-weight: 500;
  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
  cursor: pointer;
  border: 1px solid transparent;
}

.btn-base:focus-visible {
  outline: 2px solid hsl(var(--ring));
  outline-offset: 2px;
}

.btn-base:disabled {
  pointer-events: none;
  opacity: 0.5;
}

.btn-sm {
  height: 2.25rem;
  padding: 0 0.75rem;
  font-size: var(--text-xs);
}

.btn-md {
  height: 2.5rem;
  padding: 0 1rem;
}

.btn-lg {
  height: 2.75rem;
  padding: 0 2rem;
}

.btn-icon {
  height: 2.5rem;
  width: 2.5rem;
  padding: 0;
}

.btn-primary {
  background-color: hsl(var(--primary));
  color: hsl(var(--primary-foreground));
  box-shadow: var(--shadow-sm);
}

.btn-primary:hover {
  background-color: hsl(var(--primary) / 0.9);
  box-shadow: var(--shadow);
}

.btn-secondary {
  background-color: hsl(var(--secondary));
  color: hsl(var(--secondary-foreground));
  border-color: hsl(var(--border));
}

.btn-secondary:hover {
  background-color: hsl(var(--secondary) / 0.8);
}

.btn-destructive {
  background-color: hsl(var(--destructive));
  color: hsl(var(--destructive-foreground));
  box-shadow: var(--shadow-sm);
}

.btn-destructive:hover {
  background-color: hsl(var(--destructive) / 0.9);
  box-shadow: var(--shadow);
}

.btn-outline {
  border: 1px solid hsl(var(--border));
  background-color: hsl(var(--background));
  color: hsl(var(--foreground));
}

.btn-outline:hover {
  background-color: hsl(var(--accent));
  color: hsl(var(--accent-foreground));
}

.btn-ghost {
  background-color: transparent;
  color: hsl(var(--foreground));
}

.btn-ghost:hover {
  background-color: hsl(var(--accent));
  color: hsl(var(--accent-foreground));
}

.btn-link {
  background-color: transparent;
  color: hsl(var(--primary));
  text-decoration: underline;
  text-underline-offset: 4px;
}

.btn-link:hover {
  text-decoration: none;
}

/* Input fallback styles */
.input-wrapper {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-2);
  width: 100%;
}

.input-label {
  font-size: var(--text-sm);
  font-weight: 500;
  color: hsl(var(--foreground));
  line-height: none;
}

.input-field {
  display: flex;
  height: 2.5rem;
  width: 100%;
  border-radius: var(--radius);
  border: 1px solid hsl(var(--border));
  background-color: hsl(var(--background));
  padding: 0.5rem 0.75rem;
  font-size: var(--text-sm);
  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
  color: hsl(var(--foreground));
}

.input-field::placeholder {
  color: hsl(var(--muted-foreground));
}

.input-field:focus {
  outline: none;
  border-color: hsl(var(--ring));
  box-shadow: 0 0 0 2px hsl(var(--ring) / 0.2);
}

.input-field:disabled {
  cursor: not-allowed;
  opacity: 0.5;
}

/* Card fallback styles */
.card-base {
  border-radius: var(--radius-lg);
  border: 1px solid hsl(var(--border));
  background-color: hsl(var(--card));
  color: hsl(var(--card-foreground));
  box-shadow: var(--shadow-sm);
  padding: var(--spacing-6);
  width: 100%;
  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
}

.card-base:hover {
  box-shadow: var(--shadow-md);
}

/* Modal fallback styles */
.modal-overlay {
  position: fixed;
  inset: 0;
  z-index: 50;
  background-color: hsl(var(--background) / 0.8);
  backdrop-filter: blur(4px);
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 1rem;
  animation: fadeIn 0.2s ease-out;
}

@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes slideIn {
  from { 
    opacity: 0;
    transform: scale(0.95) translateY(-10px);
  }
  to { 
    opacity: 1;
    transform: scale(1) translateY(0);
  }
}

.modal-base {
  background-color: hsl(var(--card));
  border: 1px solid hsl(var(--border));
  border-radius: var(--radius-lg);
  box-shadow: var(--shadow-lg);
  width: 100%;
  max-height: 90vh;
  overflow: hidden;
  animation: slideIn 0.2s ease-out;
}

.modal-sm { max-width: 24rem; }
.modal-md { max-width: 32rem; }
.modal-lg { max-width: 48rem; }
.modal-xl { max-width: 64rem; }

.modal-header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 1.5rem;
  border-bottom: 1px solid hsl(var(--border));
}

.modal-title {
  font-size: var(--text-lg);
  font-weight: 600;
  color: hsl(var(--foreground));
  margin: 0;
}

.modal-content {
  padding: 1.5rem;
  overflow-y: auto;
  max-height: calc(90vh - 80px);
}

/* Alert fallback styles */
.alert-base {
  position: relative;
  width: 100%;
  border-radius: var(--radius);
  border: 1px solid hsl(var(--border));
  padding: 1rem;
  display: flex;
  align-items: flex-start;
  justify-content: space-between;
  gap: 0.75rem;
}

.alert-content {
  display: flex;
  align-items: flex-start;
  gap: 0.75rem;
  flex: 1;
}

.alert-icon {
  font-size: 1.25rem;
  line-height: 1;
  flex-shrink: 0;
}

.alert-body {
  flex: 1;
}

.alert-title {
  font-size: var(--text-sm);
  font-weight: 600;
  margin-bottom: 0.25rem;
  line-height: 1.4;
}

.alert-description {
  font-size: var(--text-sm);
  line-height: 1.5;
}

.alert-dismiss {
  flex-shrink: 0;
}

/* Alert variants */
.alert-default {
  background-color: hsl(var(--background));
  color: hsl(var(--foreground));
}

.alert-destructive {
  border-color: hsl(var(--destructive) / 0.5);
  background-color: hsl(var(--destructive) / 0.1);
  color: hsl(var(--destructive-foreground));
}

.alert-destructive .alert-title {
  color: hsl(var(--destructive));
}

.alert-warning {
  border-color: hsl(var(--warning) / 0.5);
  background-color: hsl(var(--warning) / 0.1);
  color: hsl(var(--foreground));
}

.alert-warning .alert-title {
  color: hsl(var(--warning));
}

.alert-success {
  border-color: hsl(var(--success) / 0.5);
  background-color: hsl(var(--success) / 0.1);
  color: hsl(var(--foreground));
}

.alert-success .alert-title {
  color: hsl(var(--success));
}

/* Progress fallback styles */
.progress-base {
  width: 100%;
}

.progress-label-container {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 0.5rem;
}

.progress-label {
  font-size: var(--text-sm);
  font-weight: 500;
  color: hsl(var(--foreground));
}

.progress-track {
  position: relative;
  width: 100%;
  background-color: hsl(var(--secondary));
  border-radius: var(--radius);
  overflow: hidden;
}

.progress-bar {
  height: 100%;
  background-color: hsl(var(--primary));
  border-radius: var(--radius);
  transition: width 0.3s ease-in-out;
}

/* Progress sizes */
.progress-sm .progress-track {
  height: 0.5rem;
}

.progress-md .progress-track {
  height: 0.75rem;
}

.progress-lg .progress-track {
  height: 1rem;
}

/* Progress variants */
.progress-default {
  background-color: hsl(var(--primary));
}

.progress-success {
  background-color: hsl(var(--success));
}

.progress-warning {
  background-color: hsl(var(--warning));
}

.progress-destructive {
  background-color: hsl(var(--destructive));
}

.progress-animated .progress-bar {
  animation: progressPulse 2s ease-in-out infinite;
}

@keyframes progressPulse {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.8;
  }
}

/* Checkbox fallback styles */
.checkbox-wrapper {
  display: flex;
  align-items: flex-start;
  gap: 0.75rem;
}

.checkbox-container {
  position: relative;
}

.checkbox-input {
  position: absolute;
  opacity: 0;
  pointer-events: none;
}

.checkbox-base {
  width: 1rem;
  height: 1rem;
  border: 2px solid hsl(var(--border));
  border-radius: var(--radius-sm);
  background-color: hsl(var(--background));
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
}

.checkbox-base:hover {
  border-color: hsl(var(--primary));
}

.checkbox-checked {
  background-color: hsl(var(--primary));
  border-color: hsl(var(--primary));
  color: hsl(var(--primary-foreground));
}

.checkbox-indeterminate {
  background-color: hsl(var(--primary));
  border-color: hsl(var(--primary));
  color: hsl(var(--primary-foreground));
}

.checkbox-disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

.checkbox-disabled:hover {
  border-color: hsl(var(--border));
}

.checkbox-input:focus-visible + .checkbox-base {
  outline: 2px solid hsl(var(--ring));
  outline-offset: 2px;
}

.checkbox-check-icon,
.checkbox-indeterminate-icon {
  width: 0.75rem;
  height: 0.75rem;
  animation: checkboxScale 0.2s ease-out;
}

@keyframes checkboxScale {
  0% {
    transform: scale(0);
  }
  100% {
    transform: scale(1);
  }
}

.checkbox-content {
  flex: 1;
}

.checkbox-label {
  font-size: var(--text-sm);
  font-weight: 500;
  color: hsl(var(--foreground));
  cursor: pointer;
  line-height: 1.4;
}

.checkbox-description {
  font-size: var(--text-xs);
  color: hsl(var(--muted-foreground));
  margin-top: 0.25rem;
  margin-bottom: 0;
  line-height: 1.4;
}

/* Skeleton fallback styles */
.skeleton-base {
  background-color: hsl(var(--muted));
  border-radius: var(--radius);
  display: inline-block;
}

.skeleton-text {
  height: 1rem;
  width: 100%;
  border-radius: var(--radius-sm);
}

.skeleton-circular {
  border-radius: 50%;
  width: 2.5rem;
  height: 2.5rem;
}

.skeleton-rectangular {
  width: 100%;
  height: 2rem;
}

.skeleton-pulse {
  animation: skeletonPulse 2s ease-in-out infinite;
}

.skeleton-wave {
  position: relative;
  overflow: hidden;
}

.skeleton-wave::after {
  content: '';
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background: linear-gradient(
    90deg,
    transparent,
    hsl(var(--background) / 0.4),
    transparent
  );
  animation: skeletonWave 1.5s ease-in-out infinite;
}

@keyframes skeletonPulse {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
}

@keyframes skeletonWave {
  0% {
    transform: translateX(-100%);
  }
  100% {
    transform: translateX(100%);
  }
} 